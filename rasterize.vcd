$date
	Wed Nov 23 06:12:42 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module rasterize_tb $end
$var wire 1 ! valid_out $end
$var wire 28 " pixel_out [27:0] $end
$var reg 1 # clk $end
$var reg 64 $ model_in [63:0] $end
$var reg 1 % rst $end
$var reg 1 & valid_in $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 64 ' model_in [63:0] $end
$var wire 1 % rst $end
$var wire 1 & valid_in $end
$var parameter 32 ( RASTERIZE $end
$var parameter 32 ) WAITING $end
$var reg 9 * area [8:0] $end
$var reg 16 + check_1 [15:0] $end
$var reg 16 , check_2 [15:0] $end
$var reg 16 - check_3 [15:0] $end
$var reg 10 . color [9:0] $end
$var reg 7 / e1a [6:0] $end
$var reg 7 0 e1b [6:0] $end
$var reg 7 1 e1c [6:0] $end
$var reg 28 2 pixel_out [27:0] $end
$var reg 1 3 state $end
$var reg 1 ! valid $end
$var reg 6 4 x [5:0] $end
$var reg 6 5 x_1 [5:0] $end
$var reg 6 6 x_2 [5:0] $end
$var reg 6 7 x_3 [5:0] $end
$var reg 6 8 x_curr [5:0] $end
$var reg 6 9 x_max [5:0] $end
$var reg 6 : x_min [5:0] $end
$var reg 6 ; xmax [5:0] $end
$var reg 6 < xmin [5:0] $end
$var reg 6 = y [5:0] $end
$var reg 6 > y_1 [5:0] $end
$var reg 6 ? y_2 [5:0] $end
$var reg 6 @ y_3 [5:0] $end
$var reg 6 A y_curr [5:0] $end
$var reg 6 B y_max [5:0] $end
$var reg 6 C y_min [5:0] $end
$var reg 6 D ymax [5:0] $end
$var reg 6 E ymin [5:0] $end
$var reg 6 F z [5:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 G i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 H i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b0 )
b1 (
$end
#0
$dumpvars
b0 H
b0 G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
x3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx '
x&
0%
bx $
0#
bx "
x!
$end
#10000
03
1#
#20000
0#
1%
#30000
b100000 =
b100000 4
b0 -
b0 ,
b0 +
b0 1
b0 0
b0 /
b0 F
b0 .
b0 D
b0 E
b0 ;
b0 <
b0 A
b0 8
0!
b11 G
1#
#40000
b111111010 *
b100 B
b11 9
b1 C
b1 :
b1 @
b100 ?
b1 >
b11 7
b10 6
b1 5
0#
b10000010000110000100001000000000000110000010000000000000011 $
b10000010000110000100001000000000000110000010000000000000011 '
1&
0%
#50000
b100001 =
b100001 4
b110 ,
b1111110 1
b1111111 0
b11 /
b11 .
b11 F
b100 D
b1 E
b11 ;
b1 <
b1 A
b1 8
13
1#
#60000
0#
b1 H
0&
#70000
b100010 4
b11 ,
b11 +
b10 8
b1000011000010000110000000011 "
b1000011000010000110000000011 2
1!
1#
#80000
0#
b10 H
#90000
b100011 4
b0 ,
b110 +
b11 8
b1000101000010000110000000011 "
b1000101000010000110000000011 2
1#
#100000
0#
b11 H
#110000
b100010 =
b100001 4
b10 -
b101 ,
b1111111111111111 +
b10 A
b1 8
b1000111000010000110000000011 "
b1000111000010000110000000011 2
1#
#120000
0#
b100 H
#130000
b100010 4
b10 ,
b10 +
b10 8
0!
1#
#140000
0#
b101 H
#150000
b100011 4
b1111111111111111 ,
b101 +
b11 8
b1000101000100000110000000011 "
b1000101000100000110000000011 2
1!
1#
#160000
0#
b110 H
#170000
b100011 =
b100001 4
b100 -
b100 ,
b1111111111111110 +
b11 A
b1 8
0!
1#
#180000
0#
b111 H
#190000
b100010 4
b1 ,
b1 +
b10 8
1#
#200000
0#
b1000 H
#210000
b100011 4
b1111111111111110 ,
b100 +
b11 8
b1000101000110000110000000011 "
b1000101000110000110000000011 2
1!
1#
#220000
0#
b1001 H
#230000
b100100 =
b100001 4
b110 -
b11 ,
b1111111111111101 +
b100 A
b1 8
0!
1#
#240000
0#
b1010 H
#250000
b100010 4
b0 ,
b0 +
b10 8
1#
#260000
0#
#270000
b100011 4
b1111111111111101 ,
b11 +
b11 8
b1000101001000000110000000011 "
b1000101001000000110000000011 2
1!
1#
#280000
0#
#290000
03
0!
1#
#300000
0#
#310000
1#
#320000
0#
